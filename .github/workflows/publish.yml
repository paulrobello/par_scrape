name: Publish 🐍 📦 to PyPI

on:
  workflow_dispatch:
  workflow_call:

jobs:
  publish-to-pypi:
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'workflow_call'
    name: Publish 🐍 distribution 📦 to PyPI
    runs-on: ubuntu-latest
    timeout-minutes: 20
    environment:
      name: pypi
      url: https://pypi.org/p/par_scrape
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          uv sync --all-extras --dev

      - name: Get version from __init__.py
        id: get_version
        run: |
          version=$(uv run python -c "from src.par_scrape import __version__; print(__version__)")
          echo "Raw version output: $version"
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Check version
        id: check_version
        run: |
          echo "Version in env: ${{ env.VERSION }}"
          if [ -z "${{ env.VERSION }}" ]; then
            echo "Error: VERSION is empty"
            exit 1
          fi

      - name: Restore cached build artifacts
        id: cache
        uses: actions/cache@v4
        with:
          path: dist
          key: ${{ runner.os }}-3.12-x64-${{ hashFiles('**/pyproject.toml') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-3.12-x64-${{ hashFiles('**/pyproject.toml') }}-
            ${{ runner.os }}-3.12-x64-

      - name: Build if artifacts not cached
        if: steps.cache.outputs.cache-hit != 'true'
        run: make package

      - name: Publish distribution 📦 to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: 'The project {{ EVENT_PAYLOAD.repository.full_name }} ${{ env.VERSION }} has been published to PyPI.'
        continue-on-error: true

      - name: Cleanup on failure
        if: failure()
        run: |
          rm -rf dist/ || true
